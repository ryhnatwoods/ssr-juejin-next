{"ast":null,"code":"import \"antd/lib/skeleton/style/css\";\nimport _Skeleton from \"antd/lib/skeleton\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/avatar/style/css\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/Users/wangning/Desktop/ssr-juejin-next/components/LoadMoreList.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\n\nconst LoadMoreList = props => {\n  const {\n    0: initLoading,\n    1: setInitLoading\n  } = useState(true);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(props.gold && props.gold.goldList || []);\n  const {\n    0: list,\n    1: setList\n  } = useState(props.gold && props.gold.goldList || []);\n  useEffect(() => {\n    if (props.csr) {\n      props.refreshGoldList();\n    } else {\n      setInitLoading(true);\n    }\n\n    return () => {// clean func\n    };\n  }, []);\n\n  onLoadMore = async () => {\n    setLoading(true);\n    setList(this.state.data.concat([...new Array(props.gold.limit)].map(() => ({\n      loading: true,\n      name: {}\n    }))));\n    props.updateGoldConds({\n      \"offset\": ++props.offset\n    });\n    props.refreshGoldList();\n  };\n\n  return __jsx(_List, {\n    className: \"demo-loadmore-list\",\n    loading: initLoading,\n    itemLayout: \"horizontal\",\n    loadMore: !initLoading && !loading ? __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(_Button, {\n      onClick: this.onLoadMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"loading more\")) : null,\n    dataSource: list,\n    renderItem: item => __jsx(_List.Item, {\n      actions: [__jsx(\"a\", {\n        key: \"list-loadmore-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"edit\"), __jsx(\"a\", {\n        key: \"list-loadmore-more\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"more\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(_Skeleton, {\n      avatar: true,\n      title: false,\n      loading: item.loading,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(_List.Item.Meta, {\n      avatar: __jsx(_Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      title: __jsx(\"a\", {\n        href: \"https://ant.design\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, item.name.last),\n      description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"content\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n\nexport default LoadMoreList;","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/components/LoadMoreList.js"],"names":["React","useEffect","useState","LoadMoreList","props","initLoading","setInitLoading","loading","setLoading","data","setData","gold","goldList","list","setList","csr","refreshGoldList","onLoadMore","state","concat","Array","limit","map","name","updateGoldConds","offset","textAlign","marginTop","height","lineHeight","item","last"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { List, Avatar, Button, Skeleton } from 'antd';\n\nconst LoadMoreList = props => {\n  const [ initLoading, setInitLoading] = useState(true);\n  const [ loading, setLoading ] = useState(false);\n  const [ data, setData ] = useState(props.gold && props.gold.goldList || []);\n  const [ list, setList ] = useState(props.gold && props.gold.goldList || []);\n\n  useEffect(() => {\n    if(props.csr){\n      props.refreshGoldList();\n    }else{\n      setInitLoading(true)\n    }\n    return () => {\n      // clean func\n    };\n  }, []);\n\n  onLoadMore = async() => {\n    setLoading(true);\n    setList(this.state.data.concat([...new Array(props.gold.limit)].map(() => ({ loading: true, name: {} }))));\n    props.updateGoldConds({\"offset\": ++props.offset});\n    props.refreshGoldList();\n  };\n\n  return (\n    <List\n      className=\"demo-loadmore-list\"\n      loading={initLoading}\n      itemLayout=\"horizontal\"\n      loadMore={\n        !initLoading && !loading ? (\n          <div\n            style={{\n              textAlign: 'center',\n              marginTop: 12,\n              height: 32,\n              lineHeight: '32px',\n            }}\n          >\n            <Button onClick={this.onLoadMore}>loading more</Button>\n          </div>\n        ) : null\n      }\n      dataSource={list}\n      renderItem={item => (\n        <List.Item\n          actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\n        >\n          <Skeleton avatar title={false} loading={item.loading} active>\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={<a href=\"https://ant.design\">{item.name.last}</a>}\n              description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            />\n            <div>content</div>\n          </Skeleton>\n        </List.Item>\n      )}\n    />\n  );\n}\n\nexport default LoadMoreList"]},"metadata":{},"sourceType":"module"}