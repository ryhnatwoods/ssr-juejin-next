{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar API = require(\"../../API\");\n\nvar defaultParams = {\n  method: \"get\",\n  requestData: null\n};\n\nvar commonProcessFlow = function commonProcessFlow($axios, url, method, requestData) {\n  var result;\n  return _regeneratorRuntime.async(function commonProcessFlow$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          result = null;\n\n          if (!(method === \"get\")) {\n            _context.next = 13;\n            break;\n          }\n\n          if (!requestData) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap($axios[method](url, {\n            params: requestData\n          }));\n\n        case 5:\n          result = _context.sent;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap($axios[method](url));\n\n        case 10:\n          result = _context.sent;\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          if (!(method === \"post\")) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 16;\n          return _regeneratorRuntime.awrap($axios[method](url, requestData));\n\n        case 16:\n          result = _context.sent;\n\n        case 17:\n          return _context.abrupt(\"return\", result);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar JuejinService =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function JuejinService() {\n    _classCallCheck(this, JuejinService);\n  }\n\n  _createClass(JuejinService, [{\n    key: \"getBanner\",\n    value: function getBanner($axios) {\n      var params,\n          logger,\n          method,\n          requestData,\n          _args2 = arguments;\n      return _regeneratorRuntime.async(function getBanner$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : defaultParams;\n              logger = _args2.length > 2 ? _args2[2] : undefined;\n              method = params.method.toLocaleLowerCase();\n              requestData = params.requestData;\n              return _context2.abrupt(\"return\", commonProcessFlow($axios, API.GET_BANNER, method, requestData));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getLatestXiaoce\",\n    value: function getLatestXiaoce($axios) {\n      var params,\n          logger,\n          method,\n          requestData,\n          _args3 = arguments;\n      return _regeneratorRuntime.async(function getLatestXiaoce$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              params = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : defaultParams;\n              logger = _args3.length > 2 ? _args3[2] : undefined;\n              method = params.method.toLocaleLowerCase();\n              requestData = params.requestData;\n              return _context3.abrupt(\"return\", commonProcessFlow($axios, API.GET_LASTEST_XIAOCE, method, requestData));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getRecommendedArticals\",\n    value: function getRecommendedArticals($axios) {\n      var params,\n          logger,\n          method,\n          requestData,\n          _args4 = arguments;\n      return _regeneratorRuntime.async(function getRecommendedArticals$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              params = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : defaultParams;\n              logger = _args4.length > 2 ? _args4[2] : undefined;\n              method = params.method.toLocaleLowerCase();\n              requestData = params.requestData;\n              return _context4.abrupt(\"return\", commonProcessFlow($axios, API.GET_RECOMMENDED_ARTICLES, method, requestData));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getHighscoreGithub\",\n    value: function getHighscoreGithub($axios) {\n      var params,\n          logger,\n          method,\n          requestData,\n          _args5 = arguments;\n      return _regeneratorRuntime.async(function getHighscoreGithub$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              params = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : defaultParams;\n              logger = _args5.length > 2 ? _args5[2] : undefined;\n              method = params.method.toLocaleLowerCase();\n              requestData = params.requestData;\n              return _context5.abrupt(\"return\", commonProcessFlow($axios, API.GET_HIGHSCORE_GITHUB, method, requestData));\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return JuejinService;\n}();\n\nvar juejinService = new JuejinService();\nmodule.exports = juejinService;","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/service/juejin/index.js"],"names":["API","require","defaultParams","method","requestData","commonProcessFlow","$axios","url","result","params","JuejinService","logger","toLocaleLowerCase","GET_BANNER","GET_LASTEST_XIAOCE","GET_RECOMMENDED_ARTICLES","GET_HIGHSCORE_GITHUB","juejinService","module","exports"],"mappings":";;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,KADU;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAAtB;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAMC,MAAN,EAAcC,GAAd,EAAmBJ,MAAnB,EAA2BC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBI,UAAAA,MADkB,GACT,IADS;;AAAA,gBAEnBL,MAAM,KAAK,KAFQ;AAAA;AAAA;AAAA;;AAAA,eAGfC,WAHe;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAICE,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,EAAoB;AAC/BE,YAAAA,MAAM,EAAEL;AADuB,WAApB,CAJD;;AAAA;AAIdI,UAAAA,MAJc;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAQCF,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,CARD;;AAAA;AAQdC,UAAAA,MARc;;AAAA;AAAA;AAAA;;AAAA;AAAA,gBAUbL,MAAM,KAAK,MAVE;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAWHG,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,EAAoBH,WAApB,CAXG;;AAAA;AAWlBI,UAAAA,MAXkB;;AAAA;AAAA,2CAafA,MAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;IAgBME,a;;;;;;;;;;;8BAEcJ,M;;;;;;;;;;AAAQG,cAAAA,M,8DAAOP,a;AAAeS,cAAAA,M;AACpCR,cAAAA,M,GAASM,MAAM,CAACN,MAAP,CAAcS,iBAAd,E;AACTR,cAAAA,W,GAAcK,MAAM,CAACL,W;gDACpBC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACa,UAAb,EAAyBV,MAAzB,EAAiCC,WAAjC,C;;;;;;;;;;;oCAGNE,M;;;;;;;;;;AAAQG,cAAAA,M,8DAAOP,a;AAAeS,cAAAA,M;AAC1CR,cAAAA,M,GAASM,MAAM,CAACN,MAAP,CAAcS,iBAAd,E;AACTR,cAAAA,W,GAAcK,MAAM,CAACL,W;gDACpBC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACc,kBAAb,EAAiCX,MAAjC,EAAyCC,WAAzC,C;;;;;;;;;;;2CAGCE,M;;;;;;;;;;AAAQG,cAAAA,M,8DAAOP,a;AAAeS,cAAAA,M;AACjDR,cAAAA,M,GAASM,MAAM,CAACN,MAAP,CAAcS,iBAAd,E;AACTR,cAAAA,W,GAAcK,MAAM,CAACL,W;gDACpBC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACe,wBAAb,EAAuCZ,MAAvC,EAA+CC,WAA/C,C;;;;;;;;;;;uCAGHE,M;;;;;;;;;;AAAQG,cAAAA,M,8DAAOP,a;AAAeS,cAAAA,M;AAC7CR,cAAAA,M,GAASM,MAAM,CAACN,MAAP,CAAcS,iBAAd,E;AACTR,cAAAA,W,GAAcK,MAAM,CAACL,W;gDACpBC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACgB,oBAAb,EAAmCb,MAAnC,EAA2CC,WAA3C,C;;;;;;;;;;;;;;AAIhC,IAAMa,aAAa,GAAG,IAAIP,aAAJ,EAAtB;AAEAQ,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["const API = require(\"../../API\");\n\nconst defaultParams = {\n    method: \"get\",\n    requestData: null\n};\n\nconst commonProcessFlow = async($axios, url, method, requestData) => {\n    let result = null;\n    if(method === \"get\"){\n        if(requestData) {\n            result = await $axios[method](url, {\n                params: requestData\n            });\n        }else{\n            result = await $axios[method](url);\n        }\n    }else if(method === \"post\"){\n        result = await $axios[method](url, requestData);\n    }\n    return result;\n}\n\nclass JuejinService {\n\n    async getBanner($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_BANNER, method, requestData);\n    }\n\n    async getLatestXiaoce($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_LASTEST_XIAOCE, method, requestData);\n    }\n\n    async getRecommendedArticals($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_RECOMMENDED_ARTICLES, method, requestData);\n    }\n\n    async getHighscoreGithub($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_HIGHSCORE_GITHUB, method, requestData);\n    }\n}\n\nconst juejinService = new JuejinService();\n\nmodule.exports = juejinService;\n"]},"metadata":{},"sourceType":"script"}