{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/wangning/Desktop/ssr-juejin-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport React from 'react';\nimport Layout from '../components/CommonLayout';\nimport LeftColumn from '../components/LeftColumn';\nimport RightColumn from '../components/RightColumn';\nimport { connect } from 'react-redux';\nimport { refreshGithubList, updateGithubCondsupdateGoldConds } from '../action/githubAction';\nimport { refreshGoldList } from '../action/goldAction';\n\nconst Index = props => {\n  return __jsx(Layout, {\n    leftCol: __jsx(LeftColumn, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })),\n    rightCol: __jsx(RightColumn, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nIndex.getInitialProps = async () => {\n  const res1 = await fetch('http://localhost:3000/api/getRecommendedArticals', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      \"category\": \"ai\",\n      \"order\": \"heat\",\n      \"offset\": 0,\n      \"limit\": 30\n    })\n  });\n  const article = await res1.json();\n  const res2 = await fetch('http://localhost:3000/api/getHighscoreGithub', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      \"category\": \"trending\",\n      \"period\": \"day\",\n      \"lang\": \"css\",\n      \"offset\": 0,\n      \"limit\": 30\n    })\n  });\n  const github = await res2.json();\n  return {\n    articles: article.data,\n    githubs: github.data\n  };\n};\n\nconst mapStateToProps = state => ({\n  gold: state.gold,\n  github: state.github,\n  csr: false\n});\n\nconst mapDispatchToProps = {\n  refreshGoldList,\n  updateGoldConds,\n  refreshGithubList,\n  updateGithubConds\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/pages/index.js"],"names":["Link","fetch","React","Layout","LeftColumn","RightColumn","connect","refreshGithubList","updateGithubCondsupdateGoldConds","refreshGoldList","Index","props","getInitialProps","res1","method","headers","body","article","json","res2","github","articles","data","githubs","mapStateToProps","state","gold","csr","mapDispatchToProps","updateGoldConds","updateGithubConds"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,gCAA5B,QAAoE,wBAApE;AACA,SAASC,eAAT,QAAkC,sBAAlC;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,SACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAG,MAAC,UAAD,eAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;AAA8C,IAAA,QAAQ,EAAG,MAAC,WAAD,eAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIH,CALD;;AAOAD,KAAK,CAACE,eAAN,GAAwB,YAAY;AAChC,QAAMC,IAAI,GAAG,MAAMZ,KAAK,CAAC,kDAAD,EAAqD;AACzEa,IAAAA,MAAM,EAAE,MADiE;AAEzEC,IAAAA,OAAO,EAAE;AACT,sBAAgB;AADP,KAFgE;AAKzEC,IAAAA,IAAI,EAAE,gBAAe;AAAC,kBAAW,IAAZ;AAAiB,eAAQ,MAAzB;AAAgC,gBAAS,CAAzC;AAA2C,eAAQ;AAAnD,KAAf;AALmE,GAArD,CAAxB;AAOA,QAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAtB;AACA,QAAMC,IAAI,GAAG,MAAMlB,KAAK,CAAC,8CAAD,EAAiD;AACrEa,IAAAA,MAAM,EAAE,MAD6D;AAErEC,IAAAA,OAAO,EAAE;AACT,sBAAgB;AADP,KAF4D;AAKrEC,IAAAA,IAAI,EAAE,gBAAe;AAAC,kBAAW,UAAZ;AAAuB,gBAAS,KAAhC;AAAsC,cAAO,KAA7C;AAAmD,gBAAS,CAA5D;AAA8D,eAAQ;AAAtE,KAAf;AAL+D,GAAjD,CAAxB;AAOA,QAAMI,MAAM,GAAG,MAAMD,IAAI,CAACD,IAAL,EAArB;AACA,SAAO;AAAEG,IAAAA,QAAQ,EAAEJ,OAAO,CAACK,IAApB;AAA0BC,IAAAA,OAAO,EAAEH,MAAM,CAACE;AAA1C,GAAP;AACH,CAlBD;;AAoBA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADkB;AAE9BN,EAAAA,MAAM,EAAEK,KAAK,CAACL,MAFgB;AAG9BO,EAAAA,GAAG,EAAE;AAHyB,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAG;AACvBnB,EAAAA,eADuB;AAEvBoB,EAAAA,eAFuB;AAGvBtB,EAAAA,iBAHuB;AAIvBuB,EAAAA;AAJuB,CAA3B;AAMA,eAAexB,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAf","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport React from 'react'\nimport Layout from '../components/CommonLayout';\nimport LeftColumn from '../components/LeftColumn';\nimport RightColumn from '../components/RightColumn';\nimport { connect } from 'react-redux'\nimport { refreshGithubList, updateGithubCondsupdateGoldConds } from '../action/githubAction'\nimport { refreshGoldList,  } from '../action/goldAction'\nconst Index = props => {\n    return (\n        <Layout leftCol={(<LeftColumn {...props} />)} rightCol={(<RightColumn {...props} />)}>\n        </Layout>\n    )\n}\n\nIndex.getInitialProps = async () => {\n    const res1 = await fetch('http://localhost:3000/api/getRecommendedArticals', {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\"category\":\"ai\",\"order\":\"heat\",\"offset\":0,\"limit\":30})\n    })\n    const article = await res1.json()\n    const res2 = await fetch('http://localhost:3000/api/getHighscoreGithub', {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\"category\":\"trending\",\"period\":\"day\",\"lang\":\"css\",\"offset\":0,\"limit\":30})\n    })\n    const github = await res2.json()\n    return { articles: article.data, githubs: github.data }\n}\n\nconst mapStateToProps = state => ({\n    gold: state.gold,\n    github: state.github,\n    csr: false\n});\n\nconst mapDispatchToProps = {\n    refreshGoldList,\n    updateGoldConds,\n    refreshGithubList,\n    updateGithubConds\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);"]},"metadata":{},"sourceType":"module"}