{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_GITHUB_LIST, UPDATE_GITHUB_CONDS } from \"../action/githubAction\";\nconst defaultState = {\n  \"category\": \"trending\",\n  \"period\": \"day\",\n  \"lang\": \"css\",\n  \"offset\": 0,\n  \"limit\": 30,\n  githubList: []\n};\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case GET_GITHUB_LIST:\n      return _objectSpread({}, state, {\n        githubList: action.data\n      });\n\n    case UPDATE_GITHUB_CONDS:\n      return _objectSpread({}, state, {}, githubParam, {\n        githubList\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/store/github.js"],"names":["GET_GITHUB_LIST","UPDATE_GITHUB_CONDS","defaultState","githubList","state","action","type","data","githubParam"],"mappings":";;;;;;;;;;;;AAAA,SAASA,eAAT,EAA0BC,mBAA1B,QAAqD,wBAArD;AAEA,MAAMC,YAAY,GAAG;AACjB,cAAW,UADM;AAEjB,YAAS,KAFQ;AAGjB,UAAO,KAHU;AAIjB,YAAS,CAJQ;AAKjB,WAAQ,EALS;AAMjBC,EAAAA,UAAU,EAAE;AANK,CAArB;AASA,gBAAe,CAACC,KAAK,GAACF,YAAP,EAAqBG,MAArB,KAAgC;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAL;AACI,+BACOI,KADP;AAEID,QAAAA,UAAU,EAAEE,MAAM,CAACE;AAFvB;;AAIJ,SAAKN,mBAAL;AACI,+BACOG,KADP,MAEOI,WAFP;AAGIL,QAAAA;AAHJ;;AAKJ;AACI,aAAOC,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import { GET_GITHUB_LIST, UPDATE_GITHUB_CONDS } from \"../action/githubAction\"\n\nconst defaultState = {\n    \"category\":\"trending\",\n    \"period\":\"day\",\n    \"lang\":\"css\",\n    \"offset\":0,\n    \"limit\":30,\n    githubList: []\n}\n\nexport default (state=defaultState, action) => {\n    switch(action.type){\n        case GET_GITHUB_LIST:\n            return {\n                ...state,\n                githubList: action.data\n            }\n        case UPDATE_GITHUB_CONDS:\n            return {\n                ...state,\n                ...githubParam,\n                githubList\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}