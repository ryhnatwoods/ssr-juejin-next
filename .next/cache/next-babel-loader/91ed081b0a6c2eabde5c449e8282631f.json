{"ast":null,"code":"const API = require(\"../../API\");\n\nconst defaultParams = {\n  method: \"get\",\n  requestData: null\n};\n\nconst commonProcessFlow = async ($axios, url, method, requestData) => {\n  let result = null;\n\n  if (method === \"get\") {\n    if (requestData) {\n      result = await $axios[method](url, {\n        params: requestData\n      });\n    } else {\n      result = await $axios[method](url);\n    }\n  } else if (method === \"post\") {\n    result = await $axios[method](url, requestData);\n  }\n\n  return result;\n};\n\nclass JuejinService {\n  async getBanner($axios, params = defaultParams, logger) {\n    const method = params.method.toLocaleLowerCase();\n    const requestData = params.requestData;\n    return commonProcessFlow($axios, API.GET_BANNER, method, requestData);\n  }\n\n  async getLatestXiaoce($axios, params = defaultParams, logger) {\n    const method = params.method.toLocaleLowerCase();\n    const requestData = params.requestData;\n    return commonProcessFlow($axios, API.GET_LASTEST_XIAOCE, method, requestData);\n  }\n\n  async getRecommendedArticals($axios, params = defaultParams, logger) {\n    const method = params.method.toLocaleLowerCase();\n    const requestData = params.requestData;\n    return commonProcessFlow($axios, API.GET_RECOMMENDED_ARTICLES, method, requestData);\n  }\n\n  async getHighscoreGithub($axios, params = defaultParams, logger) {\n    const method = params.method.toLocaleLowerCase();\n    const requestData = params.requestData;\n    return commonProcessFlow($axios, API.GET_HIGHSCORE_GITHUB, method, requestData);\n  }\n\n}\n\nconst juejinService = new JuejinService();\nmodule.exports = juejinService;","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/service/juejin/index.js"],"names":["API","require","defaultParams","method","requestData","commonProcessFlow","$axios","url","result","params","JuejinService","getBanner","logger","toLocaleLowerCase","GET_BANNER","getLatestXiaoce","GET_LASTEST_XIAOCE","getRecommendedArticals","GET_RECOMMENDED_ARTICLES","getHighscoreGithub","GET_HIGHSCORE_GITHUB","juejinService","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,KADU;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAAtB;;AAKA,MAAMC,iBAAiB,GAAG,OAAMC,MAAN,EAAcC,GAAd,EAAmBJ,MAAnB,EAA2BC,WAA3B,KAA2C;AACjE,MAAII,MAAM,GAAG,IAAb;;AACA,MAAGL,MAAM,KAAK,KAAd,EAAoB;AAChB,QAAGC,WAAH,EAAgB;AACZI,MAAAA,MAAM,GAAG,MAAMF,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,EAAoB;AAC/BE,QAAAA,MAAM,EAAEL;AADuB,OAApB,CAAf;AAGH,KAJD,MAIK;AACDI,MAAAA,MAAM,GAAG,MAAMF,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,CAAf;AACH;AACJ,GARD,MAQM,IAAGJ,MAAM,KAAK,MAAd,EAAqB;AACvBK,IAAAA,MAAM,GAAG,MAAMF,MAAM,CAACH,MAAD,CAAN,CAAeI,GAAf,EAAoBH,WAApB,CAAf;AACH;;AACD,SAAOI,MAAP;AACH,CAdD;;AAgBA,MAAME,aAAN,CAAoB;AAEhB,QAAMC,SAAN,CAAgBL,MAAhB,EAAwBG,MAAM,GAACP,aAA/B,EAA8CU,MAA9C,EAAsD;AAClD,UAAMT,MAAM,GAAGM,MAAM,CAACN,MAAP,CAAcU,iBAAd,EAAf;AACA,UAAMT,WAAW,GAAGK,MAAM,CAACL,WAA3B;AACA,WAAOC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACc,UAAb,EAAyBX,MAAzB,EAAiCC,WAAjC,CAAxB;AACH;;AAED,QAAMW,eAAN,CAAsBT,MAAtB,EAA8BG,MAAM,GAACP,aAArC,EAAoDU,MAApD,EAA4D;AACxD,UAAMT,MAAM,GAAGM,MAAM,CAACN,MAAP,CAAcU,iBAAd,EAAf;AACA,UAAMT,WAAW,GAAGK,MAAM,CAACL,WAA3B;AACA,WAAOC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACgB,kBAAb,EAAiCb,MAAjC,EAAyCC,WAAzC,CAAxB;AACH;;AAED,QAAMa,sBAAN,CAA6BX,MAA7B,EAAqCG,MAAM,GAACP,aAA5C,EAA2DU,MAA3D,EAAmE;AAC/D,UAAMT,MAAM,GAAGM,MAAM,CAACN,MAAP,CAAcU,iBAAd,EAAf;AACA,UAAMT,WAAW,GAAGK,MAAM,CAACL,WAA3B;AACA,WAAOC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACkB,wBAAb,EAAuCf,MAAvC,EAA+CC,WAA/C,CAAxB;AACH;;AAED,QAAMe,kBAAN,CAAyBb,MAAzB,EAAiCG,MAAM,GAACP,aAAxC,EAAuDU,MAAvD,EAA+D;AAC3D,UAAMT,MAAM,GAAGM,MAAM,CAACN,MAAP,CAAcU,iBAAd,EAAf;AACA,UAAMT,WAAW,GAAGK,MAAM,CAACL,WAA3B;AACA,WAAOC,iBAAiB,CAACC,MAAD,EAASN,GAAG,CAACoB,oBAAb,EAAmCjB,MAAnC,EAA2CC,WAA3C,CAAxB;AACH;;AAxBe;;AA2BpB,MAAMiB,aAAa,GAAG,IAAIX,aAAJ,EAAtB;AAEAY,MAAM,CAACC,OAAP,GAAiBF,aAAjB","sourcesContent":["const API = require(\"../../API\");\n\nconst defaultParams = {\n    method: \"get\",\n    requestData: null\n};\n\nconst commonProcessFlow = async($axios, url, method, requestData) => {\n    let result = null;\n    if(method === \"get\"){\n        if(requestData) {\n            result = await $axios[method](url, {\n                params: requestData\n            });\n        }else{\n            result = await $axios[method](url);\n        }\n    }else if(method === \"post\"){\n        result = await $axios[method](url, requestData);\n    }\n    return result;\n}\n\nclass JuejinService {\n\n    async getBanner($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_BANNER, method, requestData);\n    }\n\n    async getLatestXiaoce($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_LASTEST_XIAOCE, method, requestData);\n    }\n\n    async getRecommendedArticals($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_RECOMMENDED_ARTICLES, method, requestData);\n    }\n\n    async getHighscoreGithub($axios, params=defaultParams, logger) {\n        const method = params.method.toLocaleLowerCase();\n        const requestData = params.requestData;\n        return commonProcessFlow($axios, API.GET_HIGHSCORE_GITHUB, method, requestData);\n    }\n}\n\nconst juejinService = new JuejinService();\n\nmodule.exports = juejinService;\n"]},"metadata":{},"sourceType":"script"}