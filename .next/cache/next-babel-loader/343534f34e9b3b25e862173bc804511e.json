{"ast":null,"code":"var TIME_DESC = {\n  getSecond: function getSecond(time) {\n    var tmpl = function tmpl(sec) {\n      return \"\".concat(sec, \"\\u79D2\\u524D\");\n    };\n\n    var boundary = [0, 59];\n    var secTime = Math.floor(time / 1000);\n\n    if (secTime >= boundary[0] && secTime <= boundary[1]) {\n      return tmpl(secTime);\n    }\n\n    return -1;\n  },\n  getMinutes: function getMinutes(time) {\n    var tmpl = function tmpl(min) {\n      return \"\".concat(min, \"\\u5206\\u949F\\u524D\");\n    };\n\n    var boundary = [0, 59];\n    var minTime = Math.floor(time / 60 * 1000);\n\n    if (minTime >= boundary[0] && minTime <= boundary[1]) {\n      return tmpl(minTime);\n    }\n\n    return -1;\n  },\n  getHours: function getHours(time) {\n    var tmpl = function tmpl(hour) {\n      return \"\".concat(hour, \"\\u5C0F\\u65F6\\u524D\");\n    };\n\n    var boundary = [0, 59];\n    var hourTime = Math.floor(time / 60 * 60 * 1000);\n\n    if (hourTime >= boundary[0] && hourTime <= boundary[1]) {\n      return tmpl(hourTime);\n    }\n\n    return -1;\n  },\n  getDays: function getDays(time) {\n    var tmpl = function tmpl(day) {\n      return \"\".concat(day, \"\\u5929\\u524D\");\n    };\n\n    var boundary = [1, 23];\n    var dayTime = Math.floor(time / 24 * 60 * 60 * 1000);\n\n    if (dayTime >= boundary[0] && dayTime <= boundary[1]) {\n      return tmpl(dayTime);\n    }\n\n    return -1;\n  },\n  getMonths: function getMonths(time) {\n    var tmpl = function tmpl(month) {\n      return \"\".concat(month, \"\\u6708\\u524D\");\n    };\n\n    var boundary = [1, 11]; //the check of month need to be enhanced\n\n    var monthTime = Math.floor(time / 31 * 24 * 60 * 60 * 1000);\n\n    if (monthTime >= boundary[0] && monthTime <= boundary[1]) {\n      return tmpl(monthTime);\n    }\n\n    return -1;\n  },\n  getYears: function getYears(time) {\n    var tmpl = function tmpl(year) {\n      return \"\".concat(year, \"\\u5E74\\u524D\");\n    }; //the check of year need to be enhanced\n\n\n    var yearTime = Math.floor(time / 365 * 31 * 24 * 60 * 60 * 1000);\n    return tmpl(yearTime);\n  }\n};\n\nvar formatCustomTime = function formatCustomTime(timeStr) {\n  try {\n    var currTimestamp = new Date().getTime(),\n        publishTimestamp = new Date(timeStr).getTime(),\n        time = Math.floor(currTimestamp - publishTimestamp);\n    var sec = -1,\n        min = -1,\n        hour = -1,\n        day = -1,\n        month = -1,\n        year = -1;\n\n    if ((sec = TIME_DESC.getSecond(time)) !== -1) {\n      return sec;\n    } else if ((min = TIME_DESC.getMinutes(time)) !== -1) {\n      return min;\n    } else if ((hour = TIME_DESC.getHours(time)) !== -1) {\n      return hour;\n    } else if ((day = TIME_DESC.getDays(time)) !== -1) {\n      return day;\n    } else if ((month = TIME_DESC.getMonths(time)) !== -1) {\n      return month;\n    } else {\n      return TIME_DESC.getYears();\n    }\n  } catch (e) {\n    return \"Invalid Time\";\n  }\n};\n\nexport default {\n  formatCustomTime: formatCustomTime\n};","map":{"version":3,"sources":["/Users/wangning/Desktop/ssr-juejin-next/utils/timeUtil.js"],"names":["TIME_DESC","getSecond","time","tmpl","sec","boundary","secTime","Math","floor","getMinutes","min","minTime","getHours","hour","hourTime","getDays","day","dayTime","getMonths","month","monthTime","getYears","year","yearTime","formatCustomTime","timeStr","currTimestamp","Date","getTime","publishTimestamp","e"],"mappings":"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","sourcesContent":["const TIME_DESC = {\n    getSecond: function(time) {\n        const tmpl = sec => (`${sec}秒前`);\n        const boundary = [0, 59];\n        const secTime = Math.floor(time/1000);\n        if(secTime >= boundary[0] && secTime <= boundary[1]){\n            return tmpl(secTime);\n        }\n        return -1;\n    },\n    getMinutes: function(time) {\n        const tmpl = min => (`${min}分钟前`);\n        const boundary = [0, 59];\n        const minTime = Math.floor(time/60*1000);\n        if(minTime >= boundary[0] && minTime <= boundary[1]){\n            return tmpl(minTime);\n        }\n        return -1;\n    },\n    getHours: function(time) {\n        const tmpl = hour => (`${hour}小时前`);\n        const boundary = [0, 59];\n        const hourTime = Math.floor(time/60*60*1000);\n        if(hourTime >= boundary[0] && hourTime <= boundary[1]){\n            return tmpl(hourTime);\n        }\n        return -1;\n    },\n    getDays: function(time) {\n        const tmpl = day => (`${day}天前`);\n        const boundary = [1, 23];\n        const dayTime = Math.floor(time/24*60*60*1000);\n        if(dayTime >= boundary[0] && dayTime <= boundary[1]){\n            return tmpl(dayTime);\n        }\n        return -1;\n    },\n    getMonths: function(time) {\n        const tmpl = month => (`${month}月前`);\n        const boundary = [1, 11];\n        //the check of month need to be enhanced\n        const monthTime = Math.floor(time/31*24*60*60*1000);\n        if(monthTime >= boundary[0] && monthTime <= boundary[1]){\n            return tmpl(monthTime);\n        }\n        return -1;\n    },\n    getYears: function(time) {\n        const tmpl = year => (`${year}年前`);\n        //the check of year need to be enhanced\n        const yearTime = Math.floor(time/365*31*24*60*60*1000);\n        return tmpl(yearTime);\n    }\n}\n\nconst formatCustomTime = function(timeStr) {\n    try{\n        const currTimestamp = new Date().getTime(), publishTimestamp = new Date(timeStr).getTime(), time = Math.floor(currTimestamp-publishTimestamp);\n        let sec = -1, min = -1, hour = -1, day = -1, month = -1, year = -1; \n        if((sec = TIME_DESC.getSecond(time)) !== -1){\n            return sec;\n        }else if((min = TIME_DESC.getMinutes(time)) !== -1){\n            return min;\n        }else if((hour = TIME_DESC.getHours(time)) !== -1){\n            return hour;\n        }else if((day = TIME_DESC.getDays(time)) !== -1){\n            return day;\n        }else if((month = TIME_DESC.getMonths(time)) !== -1){\n            return month;\n        }else{\n            return TIME_DESC.getYears();\n        }\n    }catch(e){\n        return \"Invalid Time\"\n    }\n}\n\nexport default {\n    formatCustomTime\n}"]},"metadata":{},"sourceType":"module"}